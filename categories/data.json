{
    "characters": {
        "Any Word":{
            "name": "Any Word",
            "nickname": "\\w",
            "type":"auto",
            "description":"Any alphanumeric character",
            "tips":[],
            "examples":[
                {
                    "pattern":"\\w", 
                    "matches": "<m>Th!s</m> <m>w0nd3rfu1</m> <m>w0r1d</m>!"
                },
                {
                    "pattern":"\\w", 
                    "matches": "<m>1234</m> <m>09341</m>!"
                }
            ]
        },
        "Not a Word":{
            "name": "Not a Word",
            "nickname": "\\W",
            "type":"auto",
            "description":"Any non-alphanumeric character",
            "tips":["Equivalent to [^A-Za-z0-9_]"],
            "examples":[
                {
                    "pattern":"\\W", 
                    "matches": "Th!s<m> </m>w0nd3rfu1<m> </m>w0r1d<m>!</m>"
                },
                {
                    "pattern":"\\W",
                    "matches":"Well<m>, </m>where<m> </m>are<m> </m>we<m>?</m>"
                }
            ]
        },
        "Any Digit":{
            "name": "Any Digit",
            "nickname": "\\d",
            "type":"auto",
            "description":"Any numerical character",
            "tips":["Equivalent to [0-9]"],
            "examples":[
                {
                    "pattern":"\\d", 
                    "matches": "+<m>1</m>-<m>800</m>-<m>867</m>-<m>5309</m>"
                },
                {
                    "pattern":"\\d",
                    "matches":"I met <m>111</m> people today!"
                }
            ]
        },
        "Not a Digit":{
            "name": "Not a Digit",
            "nickname": "\\D",
            "type":"auto",
            "description":"Any non-numerical character",
            "tips":["Equivalent to [^0-9]"],
            "examples":[
                {
                    "pattern":"\\d", 
                    "matches": "<m>+</m>1<m>-</m>800<m>-</m>867<m>-</m>5309"
                },
                {
                    "pattern":"\\d",
                    "matches":"<m>I met </m>111<m> people today!</m>"
                }
            ]
        },
        "Any Char":{
            "name": "Any Char",
            "nickname": ".",
            "type":"auto",
            "description":"Match all characters except line break",
            "tips":[],
            "examples":[
                {
                    "pattern":".", 
                    "matches": "<m>Th!s w0nd3rfu1 w0r1d</m>"
                },
                {
                    "pattern":".",
                    "matches":"<m>124.csv5t5@#$% w423</m>"
                }
            ]
        },
        "Range":{
            "name": "Range",
            "nickname": "[A-Z]",
            "type":"manual",
            "description":"Inclusively match sequence of characters in the given range",
            "tips":["Case sensitive", "alphabet or numbers"],
            "examples":[
                {
                    "pattern":"[i-l]", 
                    "matches": "<m>j</m>et pac<m>k</m>"
                },
                {
                    "pattern":"[2-8]",
                    "matches":"1795<m>3</m> <m>32</m>0<m>8</m>"
                }
            ]
        },
        "Single Char":{
            "name": "Single Char",
            "nickname": "x",
            "type":"manual",
            "description":"Explicitly match the given characters",
            "tips":["Can contain multiple characters"],
            "examples":[
                {
                    "pattern":"et", 
                    "matches": "j<m>et</m> pack"
                },
                {
                    "pattern":"%",
                    "matches":"42<m>%</m> true"
                }
            ]
        },
        "Set":{
            "name": "Set",
            "nickname": "[ABC]",
            "type":"manual",
            "description":"Match specific characters",
            "tips":[],
            "examples":[
                {
                    "pattern":"[aeiou]", 
                    "matches": "Alw<m>a</m><m>ys</m> <m>o</m>n t<m>i</m>m<m>e</m>"
                },
                {
                    "pattern":"[2-8]",
                    "matches":"1795<m>3</m> <m>32</m>0<m>8</m>"
                }
            ]
        },
        "Exclude Set":{
            "name": "Exclude Set",
            "nickname": "[^ABC]",
            "type":"manual",
            "description":"Match any characters not in this set",
            "tips":[],
            "examples":[
                {
                    "pattern":"[^aeiou]", 
                    "matches": "<m>Alw</m>a<m>ys </m>o<m>n t</m>i<m>m</m>e"
                },
                {
                    "pattern":"[^2-8]",
                    "matches":"<m>1795</m>3<m> </m>32<m>0</m>8"
                }
            ]
        },
        "White Space":{
            "name": "White Space",
            "nickname": "\\s",
            "type":"auto",
            "description":"Matches spaces, tabs, line breaks",
            "tips":[],
            "examples":[
                {
                    "pattern":"\\s", 
                    "matches": "Always<m> </m>on<m> </m>time"
                }
            ]
        },
        "Not White Space":{
            "name": "Not White Space",
            "nickname": "\\S",
            "type":"auto",
            "description":"Any character except spaces, tabs, line breaks",
            "tips":[],
            "examples":[
                {
                    "pattern":"\\S", 
                    "matches": "<m>Always</m> <m>on</m> <m>time</m>"
                }
            ]
        }
    },
    "anchors": {
        "Start":{
            "name": "Start",
            "nickname": "^",
            "type":"auto",
            "description":"Matches the beginning of a string",
            "tips":["Matches position, not a character"],
            "examples":[
                {
                    "pattern":"^\\w+", 
                    "matches": "<m>First</m> things first"
                }
            ]
        },
        "End":{
            "name": "End",
            "nickname": "$",
            "type":"auto",
            "description":"Matches the end of a string",
            "tips":["Matches position, not a character"],
            "examples":[
                {
                    "pattern":"\\w+$", 
                    "matches": "First things <m>first</m>"
                }
            ]
        },
        "Word Boundary":{
            "name": "Word Boundary",
            "nickname": "\\b",
            "type":"auto",
            "description":"Beginning or end of word",
            "tips":["Matches position, not a character"],
            "examples":[
                {
                    "pattern":"[o]\b", 
                    "matches": "Hell<m>o</m>, world!"
                }
            ]
        },
        "Not Word Boundary":{
            "name": "Not Word Boundary",
            "nickname": "\\B",
            "type":"auto",
            "description":"Beginning or end of word",
            "tips":["Matches position, not a character"],
            "examples":[
                {
                    "pattern":"[o]\b", 
                    "matches": "Hell<m>o</m>, world!"
                }
            ]
        }
    },
    "quantifiers": {
        "One Or More":{
            "name": "One or More",
            "nickname": "+",
            "description":"Matches 1 or more of the preceding pattern",
            "tips":[],
            "examples":[
                {
                    "pattern":"g\\w+", 
                    "matches": "g <m>good great generous</m> friend"
                }
            ]
        },
        "Exactly x Times":{
            "name": "Exactly x Times",
            "nickname": "{x}",
            "description":"Matches the specified quantity of the preceeding pattern",
            "tips":[],
            "examples":[
                {
                    "pattern":"g\\w{2}", 
                    "matches": "g <m>goo</m>d <m>gre</m>at <m>gen</m>erous friend"
                },
                {
                    "pattern":"g\\w{1,4}", 
                    "matches": "g <m>good</m> <m>great</m> <m>gener</m>ous friend"
                }
            ]
        },
        "x or More Times":{
            "name": "x or More Times",
            "nickname": "{x,}",
            "description":"...",
            "tips":[],
            "examples":[
                {
                    "pattern":"{1,}", 
                    "matches": "g <m>good</m> <m>great</m> <m>generous</m> friend"
                }
            ]
        },
        "0 or More Times":{
            "name": "0 or More Times",
            "nickname": "{0,}",
            "description":"...",
            "tips":[],
            "examples":[
                {
                    "pattern":"...", 
                    "matches": "<m>g</m> <m>good</m> <m>great</m> <m>generous</m> friend"
                }
            ]
        },
        "Optional":{
            "name": "Optional",
            "nickname": "?",
            "description":"Matches 0 or 1 of the preceding character",
            "tips":[],
            "examples":[
                {
                    "pattern":"labou?r", 
                    "matches": "<m>labor</m> <m>labour</m>"
                }
            ]
        },
       "Or": {
            "name": "Or",
            "nickname": "(a|b)",
            "description":"Match either value",
            "tips":[],
            "examples":[
                {
                    "pattern":"/(a|b)/g", 
                    "matches": "b<m>a</m>gg<m>a</m>ge"
                },
                {
                    "pattern":"b(e|a|u)d", 
                    "matches": "<m>bad</m> <m>bed</m> bid"
                }
            ]
        }
    },
    "groups": {
        "Capture Group":{
            "name": "Capture Group",
            "nickname": "(abc)",
            "description":"Group characters for comparison",
            "tips":[],
            "examples":[
                {
                    "pattern":"(lol)+", 
                    "matches": "<m>lol</m> <m>lol</m>o lots <m>lol</m>a <m>lol</m>o<m>lol</m>"
                }
            ]
        }
    }
}